<Activity mc:Ignorable="sap sap2010" x:Class="ExecutePlanMacro" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:t="clr-namespace:TCS_RPAFactory_Application_Activities;assembly=TCS-RPAFactory.Application.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="in_AppId" Type="InArgument(x:String)" />
    <x:Property Name="in_TenentId" Type="InArgument(x:String)" />
    <x:Property Name="out_File" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1158,3013</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ExecutePlanMacro_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="80">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Activities.DynamicUpdate</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>TCS_RPAFactory_Application_Activities</x:String>
      <x:String>Microsoft.Graph</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.MicrosoftOffice365.Enums</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Contracts</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files</x:String>
      <x:String>UiPath.Shared.Activities.ConnectionService.Contracts</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Excel</x:String>
      <x:String>UiPath.MicrosoftOffice365.Activities.Files.Enums</x:String>
      <x:String>UiPath.Shared.Activities.Utils</x:String>
      <x:String>UiPath.MicrosoftOffice365.Files.Models</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_19477084</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_37304091</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_4280426</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_5219630</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_55167657</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_8255200</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_23371503</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_23635656</AssemblyReference>
      <AssemblyReference>TCS-RPAFactory.Application.Activities_Expressions_31395440</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities.Design</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>Microsoft.Graph</AssemblyReference>
      <AssemblyReference>Microsoft.Graph.Core</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.SharePoint.Activities</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="ExecutePlanMacro" sap:VirtualizedContainerService.HintSize="1045,2948" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;DownloadFolder&quot;).ToString + in_Config(&quot;SharepointInputExcelFileName&quot;).ToString]" Name="ExcelPath" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;ExcelSheetName&quot;).ToString]" Name="ExcelSheet" />
      <Variable x:TypeArguments="x:String" Default="[in_Config(&quot;ExcelColumnName&quot;).ToString]" Name="ExcelFilterCol" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <t:Logs ActivityName="Log" Config="[in_Config]" Description="Execute Plan Macro" DisplayName="Logs - ExecutePlanMacro" sap:VirtualizedContainerService.HintSize="983,292" sap2010:WorkflowViewState.IdRef="Logs_1" LogLevel="Info" WorkflowFile="ExecutePlanMacro" />
    <ui:LogMessage DisplayName="Log Message - executing macro started" sap:VirtualizedContainerService.HintSize="983,92" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;macro execution started&quot;]" />
    <ui:RetryScope DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="983,1940" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="3">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="941,1765" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[ExcelPath]">
            <ui:ExcelApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Macro Execution" sap:VirtualizedContainerService.HintSize="907,1655" sap2010:WorkflowViewState.IdRef="Sequence_2">
                  <Sequence.Variables>
                    <Variable x:TypeArguments="sd:DataTable" Name="FilterData" />
                    <Variable x:TypeArguments="sd:DataTable" Name="Data" />
                    <Variable x:TypeArguments="s:DateTime" Default="[New DateTime]" Name="Today" />
                    <Variable x:TypeArguments="scg:List(sd:DataRow)" Name="FilterRows" />
                  </Sequence.Variables>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <t:Logs ActivityName="ExecuteMacro" Config="[in_Config]" Description="Execute Excel Macro..." DisplayName="Logs - ExecutePlanMacro" sap:VirtualizedContainerService.HintSize="845,292" sap2010:WorkflowViewState.IdRef="Logs_2" LogLevel="Info" WorkflowFile="ExecutePlanMacro" />
                  <ui:ExcelReadRange AddHeaders="True" DataTable="[FilterData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="845,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[ExcelSheet]">
                    <ui:ExcelReadRange.Range>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </ui:ExcelReadRange.Range>
                  </ui:ExcelReadRange>
                  <Assign DisplayName="Assign - Today's date" sap:VirtualizedContainerService.HintSize="845,61" sap2010:WorkflowViewState.IdRef="Assign_2">
                    <Assign.To>
                      <OutArgument x:TypeArguments="s:DateTime">[Today]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="s:DateTime">[Date.ParseExact(DateTime.Today.AddDays(-2).Tostring("M/d/yyyy"),"M/d/yyyy",System.Globalization.CultureInfo.InvariantCulture)]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign DisplayName="Assign - Filtered data" sap:VirtualizedContainerService.HintSize="845,65" sap2010:WorkflowViewState.IdRef="Assign_4">
                    <Assign.To>
                      <OutArgument x:TypeArguments="scg:List(sd:DataRow)">[FilterRows]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="scg:List(sd:DataRow)" xml:space="preserve">[(From d In FilterData.AsEnumerable
Let dp = CDate(d(ExcelFilterCol).toString.Trim).Date
Where dp &gt; (Today.Date)
Select r = d).ToList]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <If sap2010:Annotation.AnnotationText="When we dont have any rows to filter." Condition="[FilterRows.Count&gt;1]" DisplayName="checking rows count" sap:VirtualizedContainerService.HintSize="845,741" sap2010:WorkflowViewState.IdRef="If_1">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Sequence - Filter row count more than 1" sap:VirtualizedContainerService.HintSize="400,552" sap2010:WorkflowViewState.IdRef="Sequence_4">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Assign DisplayName="Assign - Filtered data" sap:VirtualizedContainerService.HintSize="338,65" sap2010:WorkflowViewState.IdRef="Assign_3">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataTable">[Data]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[(From d In FilterData.AsEnumerable
Let dp = CDate(d(ExcelFilterCol).toString.Trim).Date
Where dp &gt; (Today.Date)
Select r = d).CopyToDataTable]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <ui:ExcelWriteCell Cell="[in_Config(&quot;StartingCell&quot;).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_2" SheetName="[ExcelSheet]">
                          <ui:ExcelWriteCell.Text>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelWriteCell.Text>
                        </ui:ExcelWriteCell>
                        <ui:ExcelWriteRange AddHeaders="True" DataTable="[Data]" DisplayName="Write Range - Write dtaa to excel sheet" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteRange_2" SheetName="[ExcelSheet]">
                          <ui:ExcelWriteRange.StartingCell>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelWriteRange.StartingCell>
                        </ui:ExcelWriteRange>
                        <ui:ClearDataTable DataTable="[Data]" DisplayName="Clear Data Table data" sap:VirtualizedContainerService.HintSize="338,80" sap2010:WorkflowViewState.IdRef="ClearDataTable_1" />
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Sequence - Filter row count less than 1" sap:VirtualizedContainerService.HintSize="400,199" sap2010:WorkflowViewState.IdRef="Sequence_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:ExcelWriteCell Cell="[in_Config(&quot;StartingCell&quot;).ToString]" DisplayName="Write Cell" sap:VirtualizedContainerService.HintSize="338,88" sap2010:WorkflowViewState.IdRef="ExcelWriteCell_4" SheetName="[ExcelSheet]">
                          <ui:ExcelWriteCell.Text>
                            <InArgument x:TypeArguments="x:String">
                              <Literal x:TypeArguments="x:String" Value="" />
                            </InArgument>
                          </ui:ExcelWriteCell.Text>
                        </ui:ExcelWriteCell>
                      </Sequence>
                    </If.Else>
                  </If>
                  <ui:ExcelSaveWorkbook DisplayName="Save Workbook" sap:VirtualizedContainerService.HintSize="845,25" sap2010:WorkflowViewState.IdRef="ExcelSaveWorkbook_1" />
                  <ui:ExecuteMacro ContinueOnError="{x:Null}" MacroOutput="{x:Null}" DisplayName="Execute Macro" sap:VirtualizedContainerService.HintSize="845,60" sap2010:WorkflowViewState.IdRef="ExecuteMacro_2" MacroName="[in_Config(&quot;ExcelMacroName&quot;).ToString]" />
                </Sequence>
              </ActivityAction>
            </ui:ExcelApplicationScope.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:ExcelApplicationScope>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
    </ui:RetryScope>
    <t:Logs ActivityName="ExecuteMacro" Config="[in_Config]" Description="Execute Excel Macro End..." DisplayName="Logs - ExecutePlanMacro" sap:VirtualizedContainerService.HintSize="983,292" sap2010:WorkflowViewState.IdRef="Logs_3" LogLevel="Info" WorkflowFile="ExecutePlanMacro" />
    <Assign DisplayName="Assign - output file" sap:VirtualizedContainerService.HintSize="983,61" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_File]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_Config("DownloadFolder").ToString + in_Config("SharepointInputExcelFileName").ToString]</InArgument>
      </Assign.Value>
    </Assign>
  </Sequence>
</Activity>